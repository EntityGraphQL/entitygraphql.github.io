"use strict";(self.webpackChunkentity_graphql_docs=self.webpackChunkentity_graphql_docs||[]).push([[6438],{2769:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"field-extensions/field-extensions","title":"Field Extensions","description":"EntityGraphQL provides field extension methods for modifying you field expressions with common use cases, such as paging collections.","source":"@site/docs/field-extensions/field-extensions.md","sourceDirName":"field-extensions","slug":"/field-extensions/","permalink":"/docs/field-extensions/","draft":false,"unlisted":false,"editUrl":"https://github.com/EntityGraphQL/EntityGraphQL/tree/master/docs/docs/field-extensions/field-extensions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Validation","permalink":"/docs/validation"},"next":{"title":"Filtering","permalink":"/docs/field-extensions/filtering"}}');var t=i(4848),o=i(8453);const r={},l="Field Extensions",c={},d=[];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"field-extensions",children:"Field Extensions"})}),"\n",(0,t.jsx)(n.p,{children:"EntityGraphQL provides field extension methods for modifying you field expressions with common use cases, such as paging collections."}),"\n",(0,t.jsx)(n.p,{children:"The following highlights the provided field extensions in EntityGraphQL available as well as an introduction to creating your own."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./filtering",children:(0,t.jsx)(n.code,{children:"UseFilter"})})," to add expression based filtering to collections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./sorting",children:(0,t.jsx)(n.code,{children:"UseSort"})})," to add a ",(0,t.jsx)(n.code,{children:"sort"})," argument to your collections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./paging",children:"Paging"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./paging#connection-paging-model",children:(0,t.jsx)(n.code,{children:"UseConnectionPaging"})})," for paging collections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./paging#offset-paging",children:(0,t.jsx)(n.code,{children:"UseOffsetPaging"})})," for paging collections"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./custom-extensions",children:"Creating"})," your own Field Extensions"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When combining multiple extensions together on a single field ",(0,t.jsx)(n.em,{children:"order matters"}),". The correct order is for the provided extensions is"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Filter -> Sort -> Paging"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);