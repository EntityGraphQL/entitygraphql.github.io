"use strict";(self.webpackChunkentity_graphql_docs=self.webpackChunkentity_graphql_docs||[]).push([[334],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>y});var i=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=i.createContext({}),l=function(t){var e=i.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=l(t.components);return i.createElement(p.Provider,{value:e},t.children)},b="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),b=l(n),d=r,y=b["".concat(p,".").concat(d)]||b[d]||c[d]||o;return n?i.createElement(y,a(a({ref:e},u),{},{components:n})):i.createElement(y,a({ref:e},u))}));function y(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[b]="string"==typeof t?t:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2847:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:6},a="Extension Attribute",s={unversionedId:"other-extensibility/extension-attribute",id:"other-extensibility/extension-attribute",title:"Extension Attribute",description:"Field Extensions and Schema Directives use the [ExtensionAttribute] or IExtensionAttributeHandler interface to apply extensions to IFields and ISchemaTypes.",source:"@site/docs/other-extensibility/extension-attribute.md",sourceDirName:"other-extensibility",slug:"/other-extensibility/extension-attribute",permalink:"/docs/other-extensibility/extension-attribute",draft:!1,editUrl:"https://github.com/EntityGraphQL/EntityGraphQL/tree/master/docs/docs/other-extensibility/extension-attribute.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Event System",permalink:"/docs/other-extensibility/event-system"},next:{title:"Tool integration",permalink:"/docs/integration"}},p={},l=[],u={toc:l},b="wrapper";function c(t){let{components:e,...n}=t;return(0,r.kt)(b,(0,i.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"extension-attribute"},"Extension Attribute"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../field-extensions/"},"Field Extensions")," and ",(0,r.kt)("a",{parentName:"p",href:"../directives/schema-directives"},"Schema Directives")," use the ","[ExtensionAttribute]"," or ",(0,r.kt)("inlineCode",{parentName:"p"},"IExtensionAttributeHandler")," interface to apply extensions to ",(0,r.kt)("inlineCode",{parentName:"p"},"IFields")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ISchemaTypes"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ExtensionAttribute")," is useful when building new Attributes (see ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLOneOfAttribute"),") whereas ",(0,r.kt)("inlineCode",{parentName:"p"},"IExtensionAttributeHandler")," allows you to use existing attributes (see ",(0,r.kt)("inlineCode",{parentName:"p"},"ObsoleteAttributeHandler")," which marks items with the ","[ObsoleteAttribute]"," as @deprecated)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'public abstract class ExtensionAttribute : Attribute\n{\n    public virtual void ApplyExtension(IField field) { }\n    public virtual void ApplyExtension(ISchemaType type) { }\n}\n\npublic abstract class AbstractExtensionAttributeHandler<TAttribute> : IExtensionAttributeHandler where TAttribute : Attribute\n{\n    public IEnumerable<Type> AttributeTypes { get => new List<Type> { typeof(TAttribute) }; }\n\n    public virtual void ApplyExtension(IField field, Attribute attribute)\n    {\n        if (attribute is TAttribute tAttribute)\n            ApplyExtension(field, tAttribute);\n        else\n            throw new ArgumentException($"Attribute must be of type {typeof(TAttribute).Name}");\n    }\n    public virtual void ApplyExtension(ISchemaType type, Attribute attribute)\n    {\n        if (attribute is TAttribute tAttribute)\n            ApplyExtension(type, tAttribute);\n        else\n            throw new ArgumentException($"Attribute must be of type {typeof(TAttribute).Name}");\n    }\n\n    public virtual void ApplyExtension(IField field, TAttribute attribute) { }\n    public virtual void ApplyExtension(ISchemaType type, TAttribute attribute) { }\n}\npublic interface IExtensionAttributeHandler\n{\n    IEnumerable<Type> AttributeTypes { get; }\n\n    public void ApplyExtension(IField field, Attribute attribute);\n    public void ApplyExtension(ISchemaType type, Attribute attribute);\n}\n')))}c.isMDXComponent=!0}}]);