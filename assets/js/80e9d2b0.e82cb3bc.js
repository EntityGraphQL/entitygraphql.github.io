"use strict";(self.webpackChunkentity_graphql_docs=self.webpackChunkentity_graphql_docs||[]).push([[937],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),l=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),h=n,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||a;return r?i.createElement(m,o(o({ref:t},p),{},{components:r})):i.createElement(m,o({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9038:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=r(7462),n=(r(7294),r(3905));const a={sidebar_position:1},o="Operation Directives",s={unversionedId:"directives/operation-directives",id:"directives/operation-directives",title:"Operation Directives",description:"Operation Directives provide a way to dynamically change the structure and shape of our queries using variables. An example from the GraphQL website:",source:"@site/docs/directives/operation-directives.md",sourceDirName:"directives",slug:"/directives/operation-directives",permalink:"/docs/directives/operation-directives",draft:!1,editUrl:"https://github.com/EntityGraphQL/EntityGraphQL/tree/master/docs/docs/directives/operation-directives.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Subscriptions",permalink:"/docs/schema-creation/subscriptions"},next:{title:"Schema Directives",permalink:"/docs/directives/schema-directives"}},c={},l=[{value:"Built-In Directives",id:"built-in-directives",level:2},{value:"Custom Directives",id:"custom-directives",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"operation-directives"},"Operation Directives"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://graphql.org/learn/queries/#directives"},"Operation Directives")," provide a way to dynamically change the structure and shape of our queries using variables. An example from the GraphQL website:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"query Hero($episode: Episode, $withFriends: Boolean!) {\n  hero(episode: $episode) {\n    name\n    friends @include(if: $withFriends) {\n      name\n    }\n  }\n}\n")),(0,n.kt)("p",null,"Now if you set ",(0,n.kt)("inlineCode",{parentName:"p"},"withFriends")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," in the variables passed with the query POST you'll get the ",(0,n.kt)("inlineCode",{parentName:"p"},"friends")," result. If you set it to ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," you will not. Thus dynamically changing the shape of your query."),(0,n.kt)("h2",{id:"built-in-directives"},"Built-In Directives"),(0,n.kt)("p",null,"The GraphQL spec defines 2 directives that are supported out of the box in EntityGraphQL."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@include(if: Boolean)")," - Only include this field in the result if the argument is true."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@skip(if: Boolean)")," - Skip this field if the argument is true.")),(0,n.kt)("h2",{id:"custom-directives"},"Custom Directives"),(0,n.kt)("p",null,"See the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/lukemurray/EntityGraphQL/blob/master/src/EntityGraphQL/Directives/IncludeDirectiveProcessor.cs"},"IncludeDirective")," implementation to see how you could implement a custom directive. You can add your directive to the schema with the following"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"// Example only, you don't need to actually add Include or Skip directives\nschema.AddDirective(new IncludeDirective());\n")),(0,n.kt)("p",null,"These directives work on the internal representation of a field ",(0,n.kt)("inlineCode",{parentName:"p"},"GraphQLQueryNode"),". This is working against the query graph not the data result."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"There is more functionality planned for custom directives which can work on both the pre-execution query graph or the post-execution data.")))}u.isMDXComponent=!0}}]);