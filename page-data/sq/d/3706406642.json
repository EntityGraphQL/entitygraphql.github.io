{"data":{"allMdx":{"edges":[{"node":{"fields":{"slug":"/authorization"},"tableOfContents":{"items":[{"url":"#passing-in-the-user","title":"Passing in the User"},{"url":"#adding-authorization-on-roles-or-policies","title":"Adding Authorization on Roles or Policies"},{"url":"#mutations","title":"Mutations"},{"url":"#queries","title":"Queries"},{"url":"#authorization-without-aspnet","title":"Authorization without ASP.Net"}]}}},{"node":{"fields":{"slug":"/field-extensions"},"tableOfContents":{}}},{"node":{"fields":{"slug":"/entity-framework"},"tableOfContents":{"items":[{"url":"#examples","title":"Examples"},{"url":"#how-entitygraphql-handles-withservice-with-ef","title":"How EntityGraphQL handles WithService() with EF"},{"url":"#limitations-with-using-getservice--ef","title":"Limitations with using GetService() & EF"}]}}},{"node":{"fields":{"slug":"/getting-started"},"tableOfContents":{"items":[{"url":"#installation","title":"Installation"},{"url":"#create-a-data-model","title":"Create a data model"},{"url":"#create-the-api","title":"Create the API"},{"url":"#query-your-api","title":"Query your API"},{"url":"#custom-controller--manual-execution","title":"Custom Controller / Manual Execution","items":[{"url":"#build-the-graphql-schema","title":"Build the GraphQL schema"},{"url":"#executing-a-query","title":"Executing a Query"},{"url":"#configuring-systemtextjson","title":"Configuring System.Text.Json"},{"url":"#deserialization-of-queryrequest--queryvariables","title":"Deserialization of QueryRequest & QueryVariables"}]}]}}},{"node":{"fields":{"slug":"/integration"},"tableOfContents":{}}},{"node":{"fields":{"slug":"/schema-creation"},"tableOfContents":{"items":[{"url":"#schema-creation","title":"Schema Creation"},{"url":"#adding-types","title":"Adding Types"},{"url":"#adding-fields","title":"Adding Fields"},{"url":"#helper-methods","title":"Helper Methods","items":[{"url":"#building-a-full-schema","title":"Building a full schema"},{"url":"#adding-all-fields-on-a-type","title":"Adding all fields on a type"},{"url":"#modifying-the-generated-schema","title":"Modifying the generated schema"}]}]}}},{"node":{"fields":{"slug":"/"},"tableOfContents":{}}},{"node":{"fields":{"slug":"/serialization-naming"},"tableOfContents":{"items":[{"url":"#override-default-naming","title":"Override default naming"},{"url":"#serialization","title":"Serialization"},{"url":"#full-pascalcase-example","title":"Full PascalCase example"}]}}},{"node":{"fields":{"slug":"/validation"},"tableOfContents":{"items":[{"url":"#mutation-validation","title":"Mutation Validation"},{"url":"#query-field-validation","title":"Query Field Validation"},{"url":"#custom-validation-with-argument-validators","title":"Custom Validation with Argument Validators"},{"url":"#validation-with-attributes","title":"Validation with Attributes"},{"url":"#extensions---adding-custom-data-to-errors","title":"Extensions - adding custom data to errors"}]}}},{"node":{"fields":{"slug":"/introduction"},"tableOfContents":{"items":[{"url":"#a-graphql-library-for-net","title":"A GraphQL library for .NET"}]}}},{"node":{"fields":{"slug":"/schema-creation/02-fields"},"tableOfContents":{"items":[{"url":"#adding-a-field-with-an-argument","title":"Adding a field with an argument"},{"url":"#required-arguments","title":"Required arguments"},{"url":"#optional-arguments","title":"Optional arguments"},{"url":"#default-values","title":"Default values"},{"url":"#helper-methods","title":"Helper methods","items":[{"url":"#wherewhen","title":"WhereWhen()"},{"url":"#takeint","title":"Take(int?)"}]}]}}},{"node":{"fields":{"slug":"/schema-creation/03-types"},"tableOfContents":{"items":[{"url":"#scalar-types","title":"Scalar Types"},{"url":"#enum-types","title":"Enum Types"},{"url":"#interfaces-and-implements-keyword","title":"Interfaces and Implements keyword"},{"url":"#input-types","title":"Input Types"},{"url":"#lists-and-non-null","title":"Lists and Non-Null"}]}}},{"node":{"fields":{"slug":"/schema-creation/01-mutations"},"tableOfContents":{"items":[{"url":"#adding-mutations-from-a-class","title":"Adding Mutations from a class"},{"url":"#adding-a-mutations-as-a-delegate","title":"Adding a Mutations as a Delegate"},{"url":"#why-use-expression-return-type","title":"Why Use Expression Return Type"},{"url":"#dependencies-injection--services","title":"Dependencies Injection & Services"}]}}},{"node":{"fields":{"slug":"/schema-creation/04-directives"},"tableOfContents":{"items":[{"url":"#built-in-directives","title":"Built-In Directives"},{"url":"#custom-directives","title":"Custom Directives"}]}}},{"node":{"fields":{"slug":"/field-extensions/01-paging"},"tableOfContents":{"items":[{"url":"#connection-paging-model","title":"Connection Paging Model"},{"url":"#default--max-page-size","title":"Default & Max Page Size"},{"url":"#connection-model-implementation","title":"Connection Model Implementation"},{"url":"#offset-paging","title":"Offset Paging"},{"url":"#default--max-page-size-1","title":"Default & Max Page Size"},{"url":"#custom-paging","title":"Custom Paging"}]}}},{"node":{"fields":{"slug":"/schema-creation/05-other-data-sources"},"tableOfContents":{"items":[{"url":"#resolvewithservicetservice-fields","title":"ResolveWithService<TService>() Fields"},{"url":"#services-with-non-scalar-types","title":"Services With Non-Scalar Types"},{"url":"#connecting-back-to-the-core-context","title":"Connecting Back to the Core Context"},{"url":"#complex-service-types","title":"Complex Service Types"}]}}},{"node":{"fields":{"slug":"/field-extensions/02-filtering"},"tableOfContents":{}}},{"node":{"fields":{"slug":"/field-extensions/04-custom-extensions"},"tableOfContents":{}}},{"node":{"fields":{"slug":"/field-extensions/03-sorting"},"tableOfContents":{"items":[{"url":"#default-sort","title":"Default sort"},{"url":"#choosing-the-sort-fields","title":"Choosing the sort fields"}]}}},{"node":{"fields":{"slug":"/serialization-naming/newtonsoft-json"},"tableOfContents":{}}}]}}}