{"componentChunkName":"component---src-templates-docs-js","path":"/introduction","result":{"data":{"site":{"siteMetadata":{"title":"Entity GraphQL Docs","docsLocation":"https://github.com/lukemurray/EntityGraphQL/tree/master/docs/content"}},"mdx":{"fields":{"id":"37b37133-b5d8-510b-a01d-a0d78f8b6917","title":"Introduction","slug":"/introduction"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"metaTitle\": \"EntityGraphQL introduction\",\n  \"metaDescription\": \"Introduction to the EntityGraphql .NET GraphQL library\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"A GraphQL library for .NET\"), mdx(\"p\", null, \"EntityGraphQL is a .NET (netstandard 1.6) library that allows you to easily build a GraphQL API on top of your data model with the extensibility to easily bring multiple data sources together in the single GraphQL schema.\"), mdx(\"p\", null, \"Visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://graphql.org/learn/\"\n  }, \"graphql.org\"), \" to learn more about GraphQL.\"), mdx(\"p\", null, \"EntityGraphQL builds a GraphQL schema that maps to .NET objects. It provides the functionality to parse a GraphQL query document and execute that against your mapped objects. These objects can be an Entity Framework \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DbContext\"), \" or any other .NET object, it doesn't matter.\"), mdx(\"p\", null, \"EntityGraphQL has been heavily tested against Entity Framework, although it does not require EF or any ORM.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Please explore, give feedback and join the development.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If you're looking for a .NET library to generate code to query an API from a GraphQL schema see \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://github.com/lukemurray/DotNetGraphQLQueryGen\"\n  }, \"DotNetGraphQLQueryGen\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#a-graphql-library-for-net","title":"A GraphQL library for .NET"}]},"parent":{"relativePath":"introduction.md"},"frontmatter":{"metaTitle":"EntityGraphQL introduction","metaDescription":"Introduction to the EntityGraphql .NET GraphQL library"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/authorization","title":"Authorization"}}},{"node":{"fields":{"slug":"/","title":"Entity GraphQL"}}},{"node":{"fields":{"slug":"/entity-framework","title":"Entity Framework"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/integration","title":"Integration"}}},{"node":{"fields":{"slug":"/schema-creation/01-mutations","title":"Mutations"}}},{"node":{"fields":{"slug":"/paging","title":"Paging"}}},{"node":{"fields":{"slug":"/schema-creation","title":"Schema Creation"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/schema-creation/02-fields","title":"Field Arguments"}}},{"node":{"fields":{"slug":"/schema-creation/04-directives","title":"Directives"}}},{"node":{"fields":{"slug":"/schema-creation/05-other-data-sources","title":"Other Data Sources"}}},{"node":{"fields":{"slug":"/schema-creation/03-types","title":"Other Types"}}},{"node":{"fields":{"slug":"/schema-creation/06-naming","title":"Note on Naming"}}}]}},"pageContext":{"id":"37b37133-b5d8-510b-a01d-a0d78f8b6917"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}